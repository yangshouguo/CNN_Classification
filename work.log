2018年07月13日10:36:46
	添加嵌入层，看是否能提高准确率
	嵌入层将每个字节都编码成一个8维向量
	原数据变成8个channel
	每个channel表示原来一个字节的其中一个维度的一个分量
	5类测试集准确率 81.745
	
2018年07月13日22:07:59：
测试4类 O2，O3看成一类：
测试集准确率达到93.74%

2018年07月14日10:13:37：
尝试修改隐层大小，测试4类分类准确率
hiddensize = 500
准确率稍微提高 93.78%

2018年07月14日16:53:57：
尝试修改嵌入层输出向量维数，由 8->4?
准确率提高 94.096%


2018年07月15日22:13:40
Dropout 参数 keep_prob 由 0.5 -> 0.8
准确率 94.39%



2018年07月16日11:18:17：
将 max_pool 改为 avg_pool
准确率提高到95.3178%


2018年07月23日19:10:47：

将 1024 * 4 * 8 的嵌入层输出 reshape 得到 1024 * 32 * 1 的输出 5分类准确率81.46%


2018年07月24日13:50:36：

将 1024 * 4 * 8 的嵌入层 加以 [3,4,5] * 1 * embedding_size 的filter进行卷积
然后用形状 seq_length - [3,4,5] * seq_width * embedding_size 的filter进行平均池化

效果更差


2018年07月28日16:19:51：
数据归一化到[0,1]区间然后再进行embedding，准确率反而会下降。

2018年07月30日08:55:17:
数据归一化到[0,4]，5分类准确率82.5%

2018年07月30日14:01:42：
数据归一化到[0,8],5分类准确率 84.48%

2018年07月31日09:44:05：
数据归一化到[0,32],5分类准确率 85.42%，存在过拟合
将keep_prob从0.8降到0.5 85%

2018年08月01日14:04:57：
代码更新到读取hex数据集
5分类准确率80%左右

更改代码 ： 读取1024 - 读取2048：
	准确率提升至 81.77%

2018年10月09日09:41:17
生成新的数据集，每个二进制文件的代码段作为一个文件，从中读取1024*4个字节作为输入


2018年10月15日18:29:49
5分类，训练集95左右，测试集70左右，过拟合，调整网络大小，减小参数

2018年10月20日14:07:25
加入计算神经网络参数代码
加入计算测试集前向计算过程的时间耗费代码

加入一维卷积
变化不大


2018年10月22日12:32:57

2018年10月25日15:06:58
卷积之后加入 双向lstm

主要做四分类实验







